volumes:
  mariadb-data:
  rabbitmq-data:
  postgresql-data:

networks:
  dev:
    driver: bridge

services:
  # ASP.NET Core application
  account_service:
    container_name: account-service
    build:
      context: .
      dockerfile: ./AccountService/Dockerfile
    ports:
      - "80:80"
    depends_on:
      auth_service:
        condition: service_healthy
      rabbit_mq:
        condition: service_healthy
      postgresql_db:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_HTTP_PORTS: 80
    networks:
      - dev
  
  # Rabbit Mq
  rabbit_mq:
    image: rabbitmq:3-management
    container_name: rabbit-mq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    hostname: rabbit_mq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia
    networks:
      - dev

  # Postgresql Database
  postgresql_db:
    image: postgres:17.2
    container_name: postgresql
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_DB: account_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: nigPostgres_Pas5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - dev
  
  auth_service:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.0
    command:
      - start-dev
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
      - "-Dkeycloak.migration.provider=singleFile"
      - "-Dkeycloak.migration.file=/opt/keycloak/data/import/main_realm-realm.json"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT_LOG_LEVEL: DEBUG
      KC_DB: "mariadb"
      KC_DB_USERNAME: "admin"
      KC_DB_PASSWORD: "admin"
      KC_DB_URL: jdbc:mariadb://mariadb:3306/keycloak?characterEncoding=UTF-8
    ports:
      - "8080:8080"
    volumes:
      - ./.keycloak-config:/opt/keycloak/data/import:Z
    networks:
      - dev
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;" ]
      interval: 30s
      timeout: 10s
      retries: 3
    
    # Keycloak database
  mariadb:
    image: mariadb:11.4.7
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_USER: admin
      MARIADB_PASSWORD: admin
      MARIADB_DATABASE: keycloak
      MARIADB_ROOT_PASSWORD: admin
    healthcheck:
      test: [ "CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      interval: 3s
      timeout: 3s
      retries: 20
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - dev